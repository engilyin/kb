"use strict";(self.webpackChunkalex_ilin_kb=self.webpackChunkalex_ilin_kb||[]).push([[6721],{27:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"SoftwareArchitecture/terminology","title":"Software Architecture Terminology","description":"The Terminology of Software Architecture","source":"@site/docs/SoftwareArchitecture/terminology.md","sourceDirName":"SoftwareArchitecture","slug":"/SoftwareArchitecture/terminology","permalink":"/kb/SoftwareArchitecture/terminology","draft":false,"unlisted":false,"editUrl":"https://github.com/engilyin/kb/docs/SoftwareArchitecture/terminology.md","tags":[{"inline":true,"label":"architecture","permalink":"/kb/tags/architecture"},{"inline":true,"label":"software","permalink":"/kb/tags/software"},{"inline":true,"label":"terminology","permalink":"/kb/tags/terminology"}],"version":"current","lastUpdatedAt":1734558718000,"frontMatter":{"id":"terminology","title":"Software Architecture Terminology","sidebar_label":"Terminology","description":"The Terminology of Software Architecture","tags":["architecture","software","terminology"]},"sidebar":"defaultSidebar","previous":{"title":"Quality Attributes","permalink":"/kb/SoftwareArchitecture/quality-attributes"},"next":{"title":"Tools","permalink":"/kb/category/tools"}}');var s=n(4848),r=n(8453);const a={id:"terminology",title:"Software Architecture Terminology",sidebar_label:"Terminology",description:"The Terminology of Software Architecture",tags:["architecture","software","terminology"]},o="Software Architecture Terminology",l={},c=[{value:"Driver -&gt; Goal -&gt; Objective",id:"driver---goal---objective",level:2},{value:"Values vs Capabilities",id:"values-vs-capabilities",level:2},{value:"BUSINESS ARCHITECTURE",id:"business-architecture",level:2},{value:"CAPABILITY",id:"capability",level:3},{value:"ORGANIZATION",id:"organization",level:3}];function d(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"software-architecture-terminology",children:"Software Architecture Terminology"})}),"\n",(0,s.jsx)(i.h2,{id:"driver---goal---objective",children:"Driver -> Goal -> Objective"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"BUSINESS DRIVER"})," is an internal or external change or\nimpact which indicates a reaction from the business.\nThis impact is not necessarily negative. It includes:"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Business context"}),"\n",(0,s.jsx)(i.li,{children:"Functional requirements"}),"\n",(0,s.jsx)(i.li,{children:"Quality Attributes requirements"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"BUSINESS GOAL"})," represents a high-level statement of\nintent, direction, or desired end state for an organization\nand its stakeholders"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"BUSINESS OBJECTIVE"})," is an actionable item needed to\nachieve business goals."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"values-vs-capabilities",children:"Values vs Capabilities"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"BUSINESS VALUE"})," is the generated value like concrete\nproducts or services."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"BUSINESS CAPABILITIES"})," describe what a company does and what this company is able (or needs) to do to be\nsuccessful. To achieve capabilities, a combination of organization, people, processes, and technology may be required."]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Each capability is unique."}),"\n",(0,s.jsx)(i.li,{children:"Capabilities are stable."}),"\n",(0,s.jsx)(i.li,{children:"Capabilities are abstracted from the organizational model."}),"\n",(0,s.jsx)(i.li,{children:"Capabilities can be defined for any organizational unit."}),"\n",(0,s.jsx)(i.li,{children:"Individual capabilities do not have a purpose."}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["See: ",(0,s.jsx)(i.a,{href:"https://www.leanix.net/en/wiki/ea/business-capability",children:"https://www.leanix.net/en/wiki/ea/business-capability"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"business-architecture",children:"BUSINESS ARCHITECTURE"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"BUSINESS ARCHITECTURE"})," is a representation of holistic,\nmulti-dimensional business views of: capabilities, end-to-end\nvalue delivery, information, and organizational structure; and\nthe relationships among these business views and strategies,\nproducts, policies, initiatives, and stakeholders"]}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"BUSINESS ARCHITECTURE"})," covers the following core aspects of a business: capabilities, information,\norganization, and value streams (as defined in the BIZBOK\xae Guide)"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"CAPABILITY"})," - What a business does\n(",(0,s.jsx)(i.em,{children:"Capability Map, Business Services, Business Functions"}),")"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"VALUE"})," - How a business delivers value to its customers\n(",(0,s.jsx)(i.em,{children:"Value Proposition, Value Stream Mapping"}),")"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"INFORMATION"})," - Information concepts, on IT level represented\nby data (",(0,s.jsx)(i.em,{children:"information map"}),")"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"ORGANIZATION"})," - Organization structure, organization map"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"capability",children:"CAPABILITY"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"CAPABILITY MAP"})," - A business capability map (or business capability model) is a holistic set of capabilities that\nconstitute what an enterprise does."]}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"VALUE STREAM"})," is a representation of an end-to-end\ncollection of value-adding activities that create an overall\nresult for a customer, stakeholder, or end user."]}),"\n",(0,s.jsx)(i.p,{children:"A value stream is the set of actions that take place to add value to a customer from the initial request through\nrealization of value by the customer. The value stream begins with the initial concept, moves through various\nstages of development and on through delivery and support. A value stream always begins and ends with a\ncustomer"}),"\n",(0,s.jsx)(i.h3,{id:"organization",children:"ORGANIZATION"}),"\n",(0,s.jsx)(i.p,{children:"An organizational chart shows the internal structure of an organization (departments, groups, teams) in a\nhierarchical way."}),"\n",(0,s.jsx)(i.p,{children:"It is crucial to understand how organizational structures are mapped into the business architecture, and which\nstakeholders involved."}),"\n",(0,s.jsx)(i.admonition,{type:"note",children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"CONWAY\u2019S LAW"})," Any organization that designs a system (defined broadly)\nwill produce a design whose structure is a copy of the\norganization's communication structure.\u201d"]})})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>o});var t=n(6540);const s={},r=t.createContext(s);function a(e){const i=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:i},e.children)}}}]);