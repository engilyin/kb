"use strict";(self.webpackChunkalex_ilin_kb=self.webpackChunkalex_ilin_kb||[]).push([[4434],{156:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var s=t(4848),a=t(8453);const o={},i="Ansible",l={id:"DevOps/ansible",title:"Ansible",description:"Runbook",source:"@site/docs/DevOps/ansible.md",sourceDirName:"DevOps",slug:"/DevOps/ansible",permalink:"/kb/DevOps/ansible",draft:!1,unlisted:!1,editUrl:"https://github.com/engilyin/kb/docs/DevOps/ansible.md",tags:[],version:"current",lastUpdatedAt:1727544268e3,frontMatter:{},sidebar:"defaultSidebar",previous:{title:"DevOps",permalink:"/kb/category/devops"},next:{title:"CI/CD",permalink:"/kb/DevOps/cicd"}},r={},c=[{value:"Runbook",id:"runbook",level:2},{value:"Configuring <code>ansible.cfg</code>",id:"configuring-ansiblecfg",level:2},{value:"Inventory",id:"inventory",level:2},{value:"Useful stuff",id:"useful-stuff",level:2},{value:"Disks",id:"disks",level:3},{value:"Install docker",id:"install-docker",level:3},{value:"Check output",id:"check-output",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"ansible",children:"Ansible"})}),"\n",(0,s.jsx)(n.h2,{id:"runbook",children:"Runbook"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"\n- hosts: our_host\n  become: true\n  roles:\n    - install_docker\n    - datadisk_format\n    - { role: install_ourhost, tags: [app_install] }\n\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"configuring-ansiblecfg",children:["Configuring ",(0,s.jsx)(n.code,{children:"ansible.cfg"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"[defaults]\nansible_ssh_private_key_file = /root/.ssh/google_compute_engine\nhost_key_checking = False\n[inventory]\nenable_plugins = gcp_compute, ini\nunparsed_is_failed = False\n\n"})}),"\n",(0,s.jsx)(n.h2,{id:"inventory",children:"Inventory"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"env/sbx/inventory.gcp.yml"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'plugin: gcp_compute\nprojects:\n- target-project-sbx-1234\nfilters:\n   - status="RUNNING"\n   - labels.application="myapp"\n   - labels.environment="sbx"\nhostnames:\n  - name\n  - private_ip\ncompose:\n  ansible_host: networkInterfaces[0].networkIP\n\ninventory_ip_type:\n- internal\nauth_kind: serviceaccount\nkeyed_groups:\n  - key: labels.purpose\n\n'})}),"\n",(0,s.jsx)(n.h2,{id:"useful-stuff",children:"Useful stuff"}),"\n",(0,s.jsx)(n.h3,{id:"disks",children:"Disks"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'---\n- name: Create data disk VG\n  lvg:\n    vg: "mongo_vg"\n    pvs: "{{ mongodb_data_drive_devices | join(\',\') }}"\n    state: present\n\n- name: Resize (grow) PVs if underlying device has free space\n  shell: pvresize -v "{{ mongodb_data_drive_devices | join(\' \') }}"\n\n- name: Create data disk LV\n  lvol:\n    lv: "mongo_lv"\n    vg: "mongo_vg"\n    size: "100%VG"\n    active: yes\n    state: present\n\n- name: Create data disk filesystem\n  filesystem:\n    dev: /dev/mongo_vg/mongo_lv\n    fstype: ext4\n    resizefs: yes\n\n- name: Create data disk mount point\n  file:\n    path: "{{ mongo_data_mountpoint }}"\n    mode: 0770\n    state: directory\n\n\n- name: Mount data disk\n  mount:\n    fstype: ext4\n    path: "{{ mongo_data_mountpoint }}"\n    src: /dev/mongo_vg/mongo_lv\n    state: mounted\n\n\n- name: Create data folders\n  file:\n    path: "{{ item }}"\n    mode: 0770\n    state: directory\n  loop:\n    - "{{ mongo_data_path }}"\n    - "{{ mongo_backup_data_path }}"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"install-docker",children:"Install docker"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'\n \n- name: disable SELinux\n  selinux: state=permissive policy=targeted\n  register: st\n\n- name: reboot if SELinux changed\n  shell: "sleep 5 && reboot"\n  async: 1\n  poll: 0\n  ignore_errors: true\n  when: st.changed\n\n- name: Wait for the reboot to complete if there was a change.\n  wait_for_connection:\n    connect_timeout: 20\n    sleep: 5\n    delay: 5\n    timeout: 300\n  when: st.changed\n\n- name: Remove older docker packages if exists\n  yum:\n    name: "{{ old_packages }}"\n    state: absent\n\n- name: Install yum-utils\n  yum:\n    name: yum-utils\n    update_cache: yes\n    state: present\n\n\n- name: Add docker repo\n  command: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n\n\n- name: Install required packages\n  yum:\n    name: "{{ packages }}"\n    update_cache: yes\n    state: present\n\n- name: Enable docker service\n  systemd:\n    name: docker\n    state: started\n    enabled: yes\n\n'})}),"\n",(0,s.jsx)(n.p,{children:"Defaults:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"old_packages:\n      - docker\n      - docker-client\n      - docker-client-latest\n      - docker-common\n      - docker-latest\n      - docker-latest-logrotate\n      - docker-logrotate\n      - docker-engine\n\n\npackages:\n      - docker-compose\n      - docker-ce \n      - docker-ce-cli \n      - containerd.io\n      - zip\n      - unzip\n      - lvm2\n"})}),"\n",(0,s.jsx)(n.h3,{id:"check-output",children:"Check output"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'- name: Print Out PATH\n  debug:\n  msg: "PATH: {{ path_out }}"\n\n- name: "Add {{ item }} to PATH."\n  raw: SETX /M PATH "$($([Environment]::GetEnvironmentVariables("Machine").Path -split \'\\r\\n\'));{{ item }}"\n  when: path_out.stdout.find(item) == -1\n  changed_when: true\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var s=t(6540);const a={},o=s.createContext(a);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);