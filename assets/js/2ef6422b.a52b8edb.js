"use strict";(self.webpackChunkalex_ilin_kb=self.webpackChunkalex_ilin_kb||[]).push([[8310],{7762:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Development/Angular/testing","title":"Angular Testing","description":"Mock service","source":"@site/docs/Development/Angular/testing.md","sourceDirName":"Development/Angular","slug":"/Development/Angular/testing","permalink":"/kb/Development/Angular/testing","draft":false,"unlisted":false,"editUrl":"https://github.com/engilyin/kb/docs/Development/Angular/testing.md","tags":[],"version":"current","lastUpdatedAt":1727544268000,"frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Angular State management","permalink":"/kb/Development/Angular/state-management"},"next":{"title":"Angular tips","permalink":"/kb/Development/Angular/tips"}}');var s=t(4848),i=t(8453);const o={},a="Angular Testing",u={},c=[{value:"Mock service",id:"mock-service",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"angular-testing",children:"Angular Testing"})}),"\n",(0,s.jsx)(n.h2,{id:"mock-service",children:"Mock service"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://testing-angular.com/",children:"https://testing-angular.com/"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-TypeScript",children:"providers: [\n  { provide: SignupService, useValue: signupService }\n],\n\n\nconst signupService:\n  Pick<SignupService, keyof SignupService> = {\n  isUsernameTaken() {\n    return of(false);\n  },\n  isEmailTaken() {\n    return of(false);\n  },\n  getPasswordStrength() {\n    return of(strongPassword);\n  },\n  signup() {\n    return of({ success: true });\n  },\n};\n\nconst signupService = jasmine.createSpyObj<SignupService>(\n  'SignupService',\n  {\n    // Successful responses per default\n    isUsernameTaken: of(false),\n    isEmailTaken: of(false),\n    getPasswordStrength: of(strongPassword),\n    signup: of({ success: true }),\n  }\n);\n\ndescribe('SignupFormComponent', () => {\n  let fixture: ComponentFixture<SignupFormComponent>;\n  let signupService: jasmine.SpyObj<SignupService>;\n\n  const setup = async (\n    signupServiceReturnValues?:\n      jasmine.SpyObjMethodNames<SignupService>,\n  ) => {\n    signupService = jasmine.createSpyObj<SignupService>(\n      'SignupService',\n      {\n        // Successful responses per default\n        isUsernameTaken: of(false),\n        isEmailTaken: of(false),\n        getPasswordStrength: of(strongPassword),\n        signup: of({ success: true }),\n        // Overwrite with given return values\n        ...signupServiceReturnValues,\n      }\n    );\n\n    await TestBed.configureTestingModule({\n      imports: [ReactiveFormsModule],\n      declarations: [\n        SignupFormComponent,\n        ControlErrorsComponent,\n        ErrorMessageDirective\n      ],\n      providers: [\n        { provide: SignupService, useValue: signupService }\n      ],\n    }).compileComponents();\n\n    fixture = TestBed.createComponent(SignupFormComponent);\n    fixture.detectChanges();\n  };\n\n});\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(6540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);