"use strict";(self.webpackChunkalex_ilin_kb=self.webpackChunkalex_ilin_kb||[]).push([[9899],{857:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"Job/TechInterview/Java/related/web","title":"web","description":"Web","source":"@site/docs/Job/TechInterview/Java/related/web.md","sourceDirName":"Job/TechInterview/Java/related","slug":"/Job/TechInterview/Java/related/web","permalink":"/kb/Job/TechInterview/Java/related/web","draft":false,"unlisted":false,"editUrl":"https://github.com/engilyin/kb/docs/Job/TechInterview/Java/related/web.md","tags":[],"version":"current","lastUpdatedAt":1727972934000,"frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"unix","permalink":"/kb/Job/TechInterview/Java/related/unix"},"next":{"title":"Spring AOP","permalink":"/kb/Job/TechInterview/Java/spring/aop"}}');var r=s(4848),t=s(8453);const l={},c=void 0,a={},o=[{value:"Web",id:"web",level:2},{value:"Resources",id:"resources",level:3},{value:"TCP",id:"tcp",level:3},{value:"UDP",id:"udp",level:3},{value:"HTTP Verbs",id:"http-verbs",level:3},{value:"HTTP Caching",id:"http-caching",level:3},{value:"HTTP Statuses",id:"http-statuses",level:3},{value:"HTTP Statuses in a nutshell",id:"http-statuses-in-a-nutshell",level:3},{value:"HTTP 2",id:"http-2",level:3},{value:"HTTPS (TLS)",id:"https-tls",level:3},{value:"Security",id:"security",level:3}];function d(e){const n={a:"a",h2:"h2",h3:"h3",li:"li",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"web",children:"Web"}),"\n",(0,r.jsx)(n.h3,{id:"resources",children:"Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"http://www.deepakvadgama.com/blog/ipaddress-basics-for-developers/",children:"IP Address Basics"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview",children:"HTTP Overview"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://httpstatuses.com",children:"HTTP Statuses"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching",children:"HTTP Caching"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"tcp",children:"TCP"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Transmission Control Protocol"}),"\n",(0,r.jsx)(n.li,{children:"Based on connections (involves 3-way handshake)"}),"\n",(0,r.jsx)(n.li,{children:"Guaranteed delivery of packets"}),"\n",(0,r.jsx)(n.li,{children:"Flow/Congestion control"}),"\n",(0,r.jsx)(n.li,{children:"'TCP Fast Open' improves connection times"}),"\n",(0,r.jsx)(n.li,{children:"Good for sites, applications etc."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"udp",children:"UDP"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User Datagram Protocol"}),"\n",(0,r.jsx)(n.li,{children:"Delivery not guaranteed"}),"\n",(0,r.jsx)(n.li,{children:"Stateless, not connection based"}),"\n",(0,r.jsx)(n.li,{children:"Doesn't support ordering (to be handled by application)"}),"\n",(0,r.jsx)(n.li,{children:"Good for games, videos etc."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"http-verbs",children:"HTTP Verbs"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"HEAD, OPTIONS, GET, POST, PUT, DELETE"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"http-caching",children:"HTTP Caching"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ETag"}),": Fingerprint of the resource (eg: MD5 checksum), to indicate if resource is changed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"no-cache"}),": Cache but use only after re-validating if resource is updated."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"no-store"}),": Do not cache, and re-download for each request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"max-age"}),": Amount in seconds the resource can be cached."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"must-revalidate, max-age:30"}),": Re-use cache for 30 seconds, after that must revalidate. (This can avoid download if resource has not been changed even after 30 seconds)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ideal"}),": Have html pages as no-cache, and rename all other resources with unique file name (like md5 checksum of the file)."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"http-statuses",children:(0,r.jsx)(n.a,{href:"https://httpstatuses.com",children:"HTTP Statuses"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"200: Ok"}),"\n",(0,r.jsx)(n.li,{children:"400: Bad request"}),"\n",(0,r.jsx)(n.li,{children:"401: Not authenticated"}),"\n",(0,r.jsx)(n.li,{children:"403: Not authorized"}),"\n",(0,r.jsx)(n.li,{children:"404: Not found"}),"\n",(0,r.jsx)(n.li,{children:"500: Internal server error"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"http-statuses-in-a-nutshell",children:(0,r.jsx)(n.a,{href:"https://twitter.com/stevelosh/status/372740571749572610?lang=en",children:"HTTP Statuses in a nutshell"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"20x: Success"}),"\n",(0,r.jsx)(n.li,{children:"30x: Redirection"}),"\n",(0,r.jsx)(n.li,{children:"40x: Client Error"}),"\n",(0,r.jsx)(n.li,{children:"50x: Server Error"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"http-2",children:"HTTP 2"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Why?: Top sites average 100 requests per page. Browsers allow max 6 connections. Min 35ms round trip per request. 80 byte header."}),"\n",(0,r.jsx)(n.li,{children:"No head of line blocking."}),"\n",(0,r.jsx)(n.li,{children:"Binary"}),"\n",(0,r.jsx)(n.li,{children:"Header compression. Does not send repeated headers."}),"\n",(0,r.jsx)(n.li,{children:"Priority based"}),"\n",(0,r.jsx)(n.li,{children:"Prefetch"}),"\n",(0,r.jsx)(n.li,{children:"Server Push"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"https-tls",children:"HTTPS (TLS)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Transport Layer Security"}),"\n",(0,r.jsx)(n.li,{children:"Server port 443"}),"\n",(0,r.jsx)(n.li,{children:"Certificate: Public-Private key. Signed by Certificate Authority (Verisign, Symantec, Thawte etc). These well known CAs are shipped and managed by the browser."}),"\n",(0,r.jsx)(n.li,{children:"Additional handshake on top of TCP"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"security",children:"Security"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Origin"}),": protocol + host + port"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Same Origin Policy"}),": JavaScript can only access same origin. Can\u2019t access other iframes. If you request JS from other origin the response cannot be read."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CORS (Cross Origin Resource Sharing)"}),": Allow to get JS/CSS from other origins. Important for API providers."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CSRF (Cross Site Request Forgery)"}),": Request originates from cross-site (potentially malicious) site. Can be avoided by Synchronized Token Pattern: Store token in cookie (can be read only by origin site) and pass that token along with every request as HTTP Param or Header (X-CSRF-TOKEN)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"XSS (Cross Site Scripting)"}),": Malicious scripts are injected into the HTML/JS resources. Can be avoided by escaping injected strings etc."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var i=s(6540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);