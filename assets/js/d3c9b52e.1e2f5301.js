"use strict";(self.webpackChunkalex_ilin_kb=self.webpackChunkalex_ilin_kb||[]).push([[6516],{8012:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var a=i(4848),t=i(8453);const s={},r="Database Access",o={id:"Job/TechInterview/Java/spring/databases-access",title:"Database Access",description:"JDBC",source:"@site/docs/Job/TechInterview/Java/spring/databases-access.md",sourceDirName:"Job/TechInterview/Java/spring",slug:"/Job/TechInterview/Java/spring/databases-access",permalink:"/kb/Job/TechInterview/Java/spring/databases-access",draft:!1,unlisted:!1,editUrl:"https://github.com/engilyin/kb/docs/Job/TechInterview/Java/spring/databases-access.md",tags:[],version:"current",lastUpdatedAt:1728429818e3,frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Spring Core",permalink:"/kb/Job/TechInterview/Java/spring/core"},next:{title:"Spring Messaging",permalink:"/kb/Job/TechInterview/Java/spring/messaging"}},c={},l=[{value:"JDBC",id:"jdbc",level:2},{value:"Java Persistence API (JPA)",id:"java-persistence-api-jpa",level:2},{value:"Hibirnate and other ORM",id:"hibirnate-and-other-orm",level:2},{value:"Entity mapping with annotations",id:"entity-mapping-with-annotations",level:2},{value:"Repositories and CRUD operations",id:"repositories-and-crud-operations",level:2},{value:"Custom queries",id:"custom-queries",level:2},{value:"SQL",id:"sql",level:3},{value:"HQL",id:"hql",level:3},{value:"JPQL",id:"jpql",level:3},{value:"Transactional management",id:"transactional-management",level:2},{value:"Connection Pooling",id:"connection-pooling",level:2},{value:"HikariCP",id:"hikaricp",level:3},{value:"Caching",id:"caching",level:2}];function d(e){const n={h1:"h1",h2:"h2",h3:"h3",header:"header",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"database-access",children:"Database Access"})}),"\n",(0,a.jsx)(n.h2,{id:"jdbc",children:"JDBC"}),"\n",(0,a.jsx)(n.h2,{id:"java-persistence-api-jpa",children:"Java Persistence API (JPA)"}),"\n",(0,a.jsx)(n.h2,{id:"hibirnate-and-other-orm",children:"Hibirnate and other ORM"}),"\n",(0,a.jsx)(n.h2,{id:"entity-mapping-with-annotations",children:"Entity mapping with annotations"}),"\n",(0,a.jsx)(n.h2,{id:"repositories-and-crud-operations",children:"Repositories and CRUD operations"}),"\n",(0,a.jsx)(n.h2,{id:"custom-queries",children:"Custom queries"}),"\n",(0,a.jsx)(n.h3,{id:"sql",children:"SQL"}),"\n",(0,a.jsx)(n.h3,{id:"hql",children:"HQL"}),"\n",(0,a.jsx)(n.h3,{id:"jpql",children:"JPQL"}),"\n",(0,a.jsx)(n.h2,{id:"transactional-management",children:"Transactional management"}),"\n",(0,a.jsx)(n.h2,{id:"connection-pooling",children:"Connection Pooling"}),"\n",(0,a.jsx)(n.h3,{id:"hikaricp",children:"HikariCP"}),"\n",(0,a.jsx)(n.h2,{id:"caching",children:"Caching"})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var a=i(6540);const t={},s=a.createContext(t);function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);